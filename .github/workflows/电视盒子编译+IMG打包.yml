#============================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: 电视盒子编译+IMG打包
#============================================================================================

name: 电视盒子编译+IMG打包

on:
  schedule:
    - cron: '0 22 */2 * *'
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select the source branch"
        required: false
        default: "immortalwrt-master"
        type: choice
        options:
          - openwrt-main
          - lede-master
          - immortalwrt-master
          - Lienol-master
      openwrt_board:
        description: "Select device board"
        required: false
        default: "s905d"
        type: choice
        options:
          - all
          - s905x-t95_s912-t95z-plus_s905l3-unt400g1_tanix-tx6
          - s912_s912-m8s-pro_s922x_s922x-ct2000_s922x-reva
          - smart-am40_station-m1_sw799_tn3399_vplus_zysj
          - s905d
          - s905d-ki-pro
          - s905d-sml5442tw
          - s905x
          - s905x-tx9
          - s905x-t95
          - s905x-b860h
          - s905x-tbee
          - s905w
          - s905w-w95
          - s905w-x96w
          - s905w-x96-mini
          - s905l
          - s905l2
          - s905l2-wojia
          - s905l2-e900v21e
          - s905l3
          - s905l3-cm211
          - s905l3-unt400g1
          - s905l3a
          - s905l3a-cm311
          - s905l3a-m401a
          - s905l3b
          - s905l3b-e900v22e
          - s905l3b-e900v22d
          - s905l3b-ip103h
          - s905lb-q96-mini
          - s905lb-r3300l
          - s912
          - s912-zyxq-fake
          - s912-h96pro-plus
          - s912-m8s-pro
          - s912-t95z-plus
          - s912-tx9-pro-3g
          - s912-tx9-pro-2g
          - s912-nexbox-a1
          - s912-nexbox-a2
          - s912-tx8-max
          - s912-x92
          - s912-phicomm-t1
          - s905x2
          - s905x2-x96max-2g
          - s905x2-km3
          - a311d
          - s922x
          - s922x-gtking
          - s922x-gtkingpro-h
          - s922x-reva
          - s922x-odroid-n2
          - s922x-ugoos-am6
          - s922x-ct2000
          - s905x3
          - s905x3-hk1
          - s905x3-x96max
          - s905x3-h96max
          - s905x3-ugoosx3
          - s905x3-tx3
          - s905x3-tx3-bz
          - s905x3-a95xf3
          - s905x3-a95xf3-gb
          - s905x3-x96air
          - s905x3-x96air-gb
          - s905x3-ip1001m
          - s905x3-q1
          - s905x3-q2
          - s905x3-a100
          - s905x3-2101
          - s905x3-whale
          - s905x3-b
          - s905
          - s905-mxqpro-plus
          - s905-beelink-mini
          - rock5b
          - h88k
          - ipc-r
          - r66s
          - r68s
          - h66k
          - h68k
          - h69k
          - e25
          - nanopi-r5s
          - panther-x2
          - eaidk-610
          - king3399
          - tn3399
          - kylin3399
          - hugsun-zm
          - crrc
          - smart-am40
          - sw799
          - zysj
          - dg3399
          - dlfr100
          - emb3531
          - leez
          - beikeyun
          - l1pro
          - station-m1
          - vplus
          - tanix-tx6
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "6.1.1_6.6.1_5.15.1"
        type: choice
        options:
          - 6.6.1_6.1.1_5.15.1_5.10.1_5.4.1
          - 6.1.1_6.6.1_5.15.1
          - 6.6.1_6.1.1
          - 6.1.1_5.15.1
          - 5.4.1
          - 5.10.1
          - 5.15.1
          - 6.1.1
          - 6.1.90
          - 6.6.1
          - 6.1.90_6.1.100_6.6.41
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "ophub/kernel"
        type: choice
        options:
          - ophub/kernel
      kernel_usage:
        description: "Set the tags of the stable kernel."
        required: false
        default: "stable"
        type: choice
        options:
          - stable
          - flippy
          - dev
          - beta
      # openwrt_storage:
      #   description: "Select image storage type."
      #   required: false
      #   default: "my-dev"
      #   type: choice
      #   options:
      #     - save
      #     - temp
      #     - my-dev
      builder_name:
        description: "Set OpenWrt builder signature."
        required: false
        default: "wujinjun"
        type: choice
        options:
          - wujinjun
          - your_name
      fs_size:
        description: "Set Openwrt boot/rootfs size (MB/MB). If using btrfs(default), double size will be taken exactly after installing into eMMC, because of partition structure suitable for updating via luci-app-amlogic, like A/B partition on Android"
        required: false
        default: "256/800"
        type: choice
        options:
          - 256/512
          - 256/800
          - 256/1024
          - 256/2048
          - 256/4096
          - 256/8192
          - 256/16384
          - 512/512
          - 512/800
          - 512/1024
          - 512/2048
          - 512/4096
          - 512/8192
          - 512/16384
          - 1024/1024
          - 1024/800
          - 1024/1024
          - 1024/2048
          - 1024/4096
          - 1024/8192
          - 1024/16384
      debug_or_make_config_via_reverse_proxy_ssh:
        description: "Make menuconfig via ssh under reverse proxy tunnel(Deprecated, may terminate after 45-60 minutes)"
        default: "debug"
        type: choice
        options:
          - none
          - debug
          - mkconf

env:
  SOURCE_BRANCH: ${{ inputs.source_branch || 'immortalwrt-master' }}
  OPENWRT_BOARD: ${{ inputs.openwrt_board || 's905d' }}
  OPENWRT_KERNEL: ${{ inputs.openwrt_kernel || '6.6.1_6.1.1_5.15.1' }}
  AUTO_KERNEL: ${{ !contains(inputs.auto_kernel, 'false') }}
  KERNEL_REPO: ${{ inputs.kernel_repo || 'ophub/kernel' }}
  KERNEL_USAGE: ${{ inputs.kernel_usage || 'stable' }}
#  OPENWRT_STORAGE: ${{ inputs.openwrt_storage || 'my-dev' }}
  BUILDER_NAME: ${{ inputs.builder_name || 'wujinjun' }}
  FS_SIZE: ${{ inputs.fs_size || '512/2048' }}
  FEEDS_CONF: config/${{ inputs.source_branch || 'immortalwrt-master' }}/feeds.conf.default
  CONFIG_FILE: config/${{ inputs.source_branch || 'immortalwrt-master' }}/config
  DIY_P1_SH: config/${{ inputs.source_branch || 'immortalwrt-master' }}/diy-part1.sh
  DIY_P2_SH: config/${{ inputs.source_branch || 'immortalwrt-master' }}/diy-part2.sh
  TZ: America/New_York
  MY_SSH_PUB_KEY: ${{ secrets.SSH_PUBLIC_KEY || 'none' }}
  MY_REVERSE_PROXY_TOKEN: ${{ secrets.REVERSE_PROXY_TOKEN || 'none' }}
  CPOLAR: ${{ inputs.debug_or_make_config_via_reverse_proxy_ssh || 'debug' }}

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    timeout-minutes: 4320
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      #- name: Test Cpolar
      #  shell: bash
      #  run: bash ${GITHUB_WORKSPACE}/debug-via-reverse-proxy.sh

      - name: Remote debug
        if: env.CPOLAR == 'debug'
        shell: bash
        run: bash ${GITHUB_WORKSPACE}/debug-via-reverse-proxy.sh nonblock

      - name: Collect Data on Startup
        run: |
          # sudo timedatectl set-timezone ${{ env.TZ }}
          printf "TIMESTAMP_ON_STARTUP=%(%s)T" >> $GITHUB_ENV

      - name: Check Server Performance
        run: |
          echo "警告⚠"
          echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
          echo -e "已知CPU型号(降序): 7763，8370C，8272CL，8171M，E5-2673\n"
          echo "--------------------------CPU信息--------------------------"
          echo "CPU物理数量: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
          echo "CPU核心数量: $(nproc)"
          echo -e "CPU型号信息:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\n"
          echo "--------------------------内存信息--------------------------"
          echo "已安装内存详细信息:"
          echo -e "$(sudo lshw -short -C memory | grep GiB)\n"
          echo "--------------------------硬盘信息--------------------------"
          echo "硬盘数量: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

      - name: Environment initialization
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo mkdir -p /workdir
          sudo chown ${USER}:${GROUPS} /workdir
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Free disk space
        uses: easimon/maximize-build-space@master
        with:
          build-mount-path: /workdir
          root-reserve-mb: 10240
          temp-reserve-mb: 2048
          swap-size-mb: 4096

      - name: Print disk usage after freeing disk space
        run: |
          df -h

      - name: Clone source code [ ${{ inputs.source_branch || 'immortalwrt-master' }} ]
        id: codes
        working-directory: /workdir
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          # Set up compilation source code
          if [[ "${{ env.SOURCE_BRANCH }}" == *"openwrt"* ]]; then
              REPO_URL="https://github.com/openwrt/openwrt"
              REPO_BRANCH="main"
              TAGS_NAME="official"
          elif [[ "${{ env.SOURCE_BRANCH }}" == *"lede"* ]]; then
              REPO_URL="https://github.com/coolsnowwolf/lede"
              REPO_BRANCH="master"
              TAGS_NAME="lede"
          elif [[ "${{ env.SOURCE_BRANCH }}" == *"immortalwrt"* ]]; then
              REPO_URL="https://github.com/immortalwrt/immortalwrt"
              REPO_BRANCH="master"
              TAGS_NAME="immortalwrt"
          elif [[ "${{ env.SOURCE_BRANCH }}" == *"Lienol"* ]]; then
              REPO_URL="https://github.com/Lienol/openwrt"
              REPO_BRANCH="22.03"
              TAGS_NAME="Lienol"
          else
              echo "Unknown source code repository."
              exit 1
          fi

          # Clone source code
          git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
          ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt

          # Set output information
          # echo "build_tag=OpenWrt_${TAGS_NAME}_${{ env.OPENWRT_STORAGE }}_$(date +%Y%m%d_%H%m%S)" >> ${GITHUB_OUTPUT}
          echo "build_tag=OpenWrt_${TAGS_NAME}_$(date +%Y%m%d_%H%m%S)" >> ${GITHUB_OUTPUT}
          echo -e "REPO_URL: [ ${REPO_URL} ]\nREPO_BRANCH: [ ${REPO_BRANCH} ]\nTAGS_NAME: [ ${TAGS_NAME} ]"
          df -hT ${PWD}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Print disk usage after cloning repo
        run: |
          df -h

      - name: Load custom feeds
        run: |
          [[ -f "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          chmod +x ${DIY_P1_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P1_SH}

      - name: Update feeds
        run: cd openwrt/ && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt/ && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          chmod +x ${DIY_P2_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P2_SH}

      - name: Remote make menuconfig
        if: env.CPOLAR == 'mkconf'
        # working-directory: /workdir/openwrt
        shell: bash
        run: |
          bash ${GITHUB_WORKSPACE}/debug-via-reverse-proxy.sh

      - name: Download package
        id: package
        run: |
          cd openwrt/
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Print disk usage after downloading package
        run: |
          df -h

      - name: Compile the OpenWrt
        id: compile
        run: |
          cd openwrt/
          echo -e "$(nproc) thread compile"
          make -j$(($(nproc) + 1)) V=s # || make -j1 || make -j1 V=s
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Print disk usage after compiling
        if: steps.compile.outputs.status == 'success' && !cancelled()
        run: |
          df -h

      - name: Collect Data After Finishing Compile
        run: |
          sudo timedatectl set-timezone ${{ env.TZ }}
          printf "TIMESTAMP_AFTER_COMPILE=%(%s)T" >> $GITHUB_ENV
          echo "TIME_USAGE_STARTUP_TO_COMPILE_FINISHED=$(( TIMESTAMP_AFTER_COMPILE - TIMESTAMP_ON_STARTUP ))" >> $GITHUB_ENV
          echo "DISK_USAGE_AFTER_COMPILE_HUMAN=$(df -h /workdir | tail -n 1 |  awk '{print $3}')" >> $GITHUB_ENV
          echo "DISK_USAGE_AFTER_COMPILE_ORIGIN=$(df /workdir | tail -n 1 |  awk '{print $3}')" >> $GITHUB_ENV
          # Read custom message which will be displayed in release notes
          [ -a /workdir/openwrt/custom_release_notes.txt ] && echo "CUSTOM_RELEASE_NOTES=$(cat /workdir/openwrt/custom_release_notes.txt)" > $GITHUB_ENV

      - name: Clear server space
        id: clean
        if: steps.compile.outputs.status == 'success' && !cancelled()
        run: |
          # Clean up server space
          cd openwrt/
          mkdir output
          tree -afsD . > output/filetree.txt
          cd bin/ ; find * -name '*.ipk' -exec tar -zcvf ../output/all_ipks.tar.gz '{}' '+' ; cd ../
          cp -f bin/targets/*/*/*rootfs.tar.gz output/
          cp -f .config output/config
          rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null

          # Generate sha256sum file
          cd output/
          for file in *; do [[ ! -d "${file}" ]] && sha256sum "${file}" >"${file}.sha"; done

          # Set output information
          df -hT ${PWD}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Print disk usage after clearing
        if: steps.clean.outputs.status == 'success' && !cancelled()
        run: |
          df -h

      - name: Upload OpenWrt to Release
        uses: ncipollo/release-action@main
        if: steps.clean.outputs.status == 'success' && !cancelled()
        with:
          tag: ${{ steps.codes.outputs.build_tag }}
          artifacts: openwrt/output/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            Rootfs is packed as *rootfs.tar.gz
            Packaging firmware(May fail if messages are not changed after waiting and refreshing)

      - name: Packaging OpenWrt
        if: steps.clean.outputs.status == 'success' && !cancelled()
        uses: ophub/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: openwrt/output/*rootfs.tar.gz
          openwrt_board: ${{ env.OPENWRT_BOARD }}
          openwrt_kernel: ${{ env.OPENWRT_KERNEL }}
          auto_kernel: ${{ env.AUTO_KERNEL }}
          kernel_repo: ${{ env.KERNEL_REPO }}
          kernel_usage: ${{ env.KERNEL_USAGE }}
          builder_name: ${{ env.BUILDER_NAME }}
          openwrt_size: ${{ env.FS_SIZE }}
          gh_token: ${{ secrets.GH_TOKEN }}

      - name: Upload the packaged OpenWrt
        uses: ncipollo/release-action@main
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        with:
          tag: ${{ steps.codes.outputs.build_tag }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            ### OpenWrt Image information
            - Default IP: 192.168.1.1
            - Default username: root
            - Default password: password
            - Default WIFI name:
              - OpenWrt
              - Immortalwrt
            - Default WIFI password: none
            ### Install to EMMC
            - Login to OpenWrt → System → Amlogic Service → Install OpenWrt
            ### OpenWrt Image Verification
            - sha256sum
            ### Openwrt Build Info
            - Openwrt boot/rootfs size (MB/MB): ${{ env.FS_SIZE }}
            - Disk usage after compiling: ${{ env.DISK_USAGE_AFTER_COMPILE_HUMAN }}(${{ env.DISK_USAGE_AFTER_COMPILE_ORIGIN }})
            - Time usage: ${{ env.TIME_USAGE_STARTUP_TO_COMPILE_FINISHED }}
            - Build settings:
              Source Branch: ${{ env.SOURCE_BRANCH }}
              Board: ${{ env.OPENWRT_BOARD }}
              Kernel: ${{ env.OPENWRT_KERNEL }} (Use latest: ${{ env.AUTO_KERNEL }})
              Kernel Repo: ${{ env.KERNEL_REPO }}
              Kernel Type: ${{ env.KERNEL_USAGE }}
              Build Nmae: ${{ env.BUILDER_NAME }}
              Cpolar: ${{ env.CPOLAR }}
            ### Custom Release Notes
            ${{ env.CUSTOM_RELEASE_NOTES || 'N/A' }}

      - name: Print disk usage before exiting
        if: always()
        run: |
          df -h

      - name: Wait for Remote Debug Exit
        if: env.CPOLAR != 'none' && !cancelled()
        shell: bash
        run: |
          sudo timedatectl set-timezone ${{ env.TZ }}
          ( pgrep cpolar && [ $(( $(date +%s) - TIMESTAMP_AFTER_COMPILE )) -lt 21500 ] ) || exit 0
          sleep $(( 21550 - $(( $(date +%s) - TIMESTAMP_AFTER_COMPILE )) ))
